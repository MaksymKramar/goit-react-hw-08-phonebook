{"version":3,"sources":["components/Section/Section.js","redux/contacts/contactsSelectors.js","components/Button/Button.style.js","components/Button/Button.js","components/Form/Form.style.js","components/Form/Form.js","components/Contacts/Contacts.style.js","components/Contacts/Contacts.js","components/Filter/Filter.style.js","components/Filter/Filter.js","views/ViewsStyles/PhonebookView.styles.js","views/PhonebookView.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js"],"names":["Section","title","children","getContacts","state","phoneBook","contacts","getIsLoading","isLoading","getFilter","filter","getVisibleContacts","createSelector","normalizedContacts","toLowerCase","contact","name","includes","number","CustomButton","styled","button","Button","type","text","onClick","CustomForm","form","Input","input","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","nameInputId","shortid","generate","numInputId","reset","handleChange","e","currentTarget","value","onSubmit","preventDefault","nameInlist","find","numberInList","alert","addContacts","htmlFor","id","placeholder","pattern","required","onChange","Container","div","ContactList","ul","Item","li","TextP","p","NameSpan","span","DelBtn","Contacts","map","deleteContacts","Filter","changeFilter","target","Div","PhonebookView","contactsSelectors","useEffect","contactsOperations","fetchContacts","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","setCharacters","_alphabet_","Error","unique","split","item","ind","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","mask","log","LN2","step","RegExp","replace","test"],"mappings":"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","file":"static/js/4.c57af42b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.phoneBook.contacts;\nexport const getIsLoading = (state) => state.phoneBook.isLoading;\nexport const getFilter = (state) => state.phoneBook.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedContacts = filter.toLowerCase();\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(normalizedContacts) ||\n        contact.number.includes(filter)\n    );\n  }\n);\n","import styled from \"@emotion/styled\";\n\nexport const CustomButton = styled.button`\n  /* width: 150px;\n  height: 20px;\n  cursor: pointer;\n  background-color: green;\n  border-radius: 50px; */\n  box-shadow: inset 0px 1px 0px 0px #3985b1;\n  background-color: #216288;\n  border: 1px solid #17445e;\n  display: inline-block;\n  cursor: pointer;\n  color: #ffffff;\n  padding: 8px 18px;\n  text-decoration: none;\n  font: 12px Arial, Helvetica, sans-serif;\n\n  &:hover {\n    background: linear-gradient(to bottom, #2d77a2 5%, #337da8 100%);\n    background-color: #28739e;\n  }\n`;\n","import React from \"react\";\nimport { CustomButton } from \"./Button.style\";\n\nfunction Button({ type, text, onClick }) {\n  return (\n    <CustomButton type={type} onClick={onClick}>\n      {text}\n    </CustomButton>\n  );\n}\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nexport const CustomForm = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  /* border-style: dashed;\n  border-color: aqua;\n  outline-color: tomato;\n  margin-bottom: 15px; */\n  margin-bottom: 10px;\n  box-sizing: border-box;\n  padding: 8px;\n  outline: none;\n  border: 1px solid #b0cfe0;\n  transition: all 0.3s ease-in-out;\n\n  &:focus {\n    box-shadow: 0 0 5px #b0cfe0;\n    border: 1px solid #b0cfe0;\n  }\n`;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContacts } from \"../../redux/contacts/contactsOperations\";\nimport { getContacts } from \"../../redux/contacts/contactsSelectors\";\n\nimport Button from \"../Button/Button\";\nimport shortid from \"shortid\";\nimport { CustomForm, Input } from \"./Form.style\";\n\nfunction Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const nameInputId = shortid.generate();\n  const numInputId = shortid.generate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const nameInlist = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const numberInList = contacts.find((contact) => contact.number === number);\n    if (nameInlist) {\n      alert(`'${name}' is already in your list`);\n      reset();\n      return;\n    }\n    if (numberInList) {\n      alert(`'${number}' is already in your list`);\n      reset();\n      return;\n    }\n    dispatch(addContacts({ name, number }));\n    alert(`'${name}' added to phonebook`);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <CustomForm onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId}>\n        <Input\n          id={nameInputId}\n          placeholder=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label htmlFor={numInputId}>\n        <Input\n          id={numInputId}\n          placeholder=\"Tel\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <Button text=\"Add contact\" type=\"submit\" />\n    </CustomForm>\n  );\n}\n\nexport default Form;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  max-width: 450px;\n  background: #fafafa63;\n  padding: 30px;\n  margin: 50px auto;\n  box-shadow: 1px 1px 25px rgba(0, 0, 0, 0.35);\n  border-radius: 10px;\n  border: 6px solid #305a72;\n`;\n\nexport const ContactList = styled.ul`\n  display: inline-block;\n  list-style-type: decimal;\n  font-size: x-large;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  margin-right: 15px;\n`;\n\nexport const TextP = styled.p`\n  font-size: x-large;\n  margin-right: 20px;\n`;\n\nexport const NameSpan = styled.span`\n  font-weight: bold;\n  font-family: sans-serif;\n`;\n\nexport const DelBtn = styled.button`\n  /* background-color: red;\n  border-radius: 45%;\n  width: 60px;\n  height: 30px; */\n  box-shadow: inset 0px 1px 0px 0px #3985b1;\n  background-color: #216288;\n  border: 1px solid #17445e;\n  display: inline-block;\n  cursor: pointer;\n  color: #ffffff;\n  padding: 8px 18px;\n  text-decoration: none;\n  font: 12px Arial, Helvetica, sans-serif;\n\n  &:hover {\n    background: linear-gradient(to bottom, #2d77a2 5%, #337da8 100%);\n    background-color: #28739e;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Container,\n  ContactList,\n  Item,\n  NameSpan,\n  TextP,\n  DelBtn,\n} from \"./Contacts.style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getVisibleContacts } from \"../../redux/contacts/contactsSelectors\";\nimport { deleteContacts } from \"../../redux/contacts/contactsOperations\";\n\nfunction Contacts() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  // const onDeleteContact = (id) => dispatch(contactActions.deleteContact(id));\n\n  return (\n    <Container>\n      <ContactList>\n        {contacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            <TextP>\n              <NameSpan>{name}</NameSpan>: {number}\n            </TextP>\n            <DelBtn type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n              Delete\n            </DelBtn>\n          </Item>\n        ))}\n      </ContactList>\n    </Container>\n  );\n}\n\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const TextP = styled.p`\n  margin-top: 0px;\n  margin-bottom: 0px;\n  color: linen;\n  font-size: 25px;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  box-sizing: border-box;\n  padding: 8px;\n  outline: none;\n  border: 1px solid #b0cfe0;\n  transition: all 0.3s ease-in-out;\n\n  &:focus {\n    box-shadow: 0 0 5px #b0cfe0;\n    border: 1px solid #b0cfe0;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contactSlice\";\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\nimport { Container, TextP, Input } from \"./Filter.style\";\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <TextP>Find contacts by name</TextP>\n      <Input\n        placeholder=\"Search\"\n        type=\"text\"\n        value={value}\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\n      />\n    </Container>\n  );\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Div = styled.div`\n  text-align: center;\n`;\n","import Section from \"../components/Section/Section\";\nimport Form from \"../components/Form/Form\";\nimport Contacts from \"../components/Contacts/Contacts\";\nimport Filter from \"../components/Filter/Filter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsSelectors, contactsOperations } from \"../redux/contacts\";\nimport { useEffect } from \"react\";\nimport { Div } from \"./ViewsStyles/PhonebookView.styles\";\n\nexport default function PhonebookView() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n  // console.log(contacts.length);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n  return (\n    <Div>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      {contacts.length > 0 && (\n        <Section title=\"Contacts\">\n          <Filter />\n          <Contacts />\n        </Section>\n      )}\n    </Div>\n  );\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n"],"sourceRoot":""}